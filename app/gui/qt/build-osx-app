#!/usr/bin/env bash

# Use bash unofficial strict mode http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -euo pipefail
IFS=$'\n\t'

# Uncomment 'set -vx' to enhance debugging 
#set -vx

# Print line numbers and function names http://wiki.bash-hackers.org/scripting/debuggingtips
export PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'

SP_APP_SRC="$(pwd)"            # This directory
SP_SRC="$SP_APP_SRC/../../.."  # sources for Sonic Pi as a whole
SP_ROOT="$SP_SRC/.."           # parent dir above Sonic Pi sources

echo "This script installs supercollider and the sc3-plugins from source"
echo "We're working to make this script a one shot solution for all OSX platforms"
echo "Please direct rage and suggestions to Factoid in (https://gitter.im/samaaron/sonic-pi)"

#Ensure XCode full version is installed
if [[ -z "$(which xcodebuild)" ]] || ! xcodebuild --help 2>&1 > /dev/null; then
  echo "Please install XCode from the App Store."
  echo "You will need the full version, not just the command line tools."
  exit 1
fi

#Ensure homebrew is installed
if [[ -z "$(which brew)" ]]; then
  echo "No homebrew found - installing Homebrew from https://brew.sh"
  /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
fi
#Install homebrew prerequisites
minor_os_version="$(sw_vers -productVersion | cut -d\. -f 2)"
if [[ "$minor_os_version" -lt 11 ]]; then
  QT_PACKAGE=qt55
else
  QT_PACKAGE=qt
fi
brew install "$QT_PACKAGE" boost cmake pkg-config aubio libsndfile wget
QT="$(brew --prefix $QT_PACKAGE)"

#Download and extract source packages
cd "$SP_ROOT"
pwd
if [[ ! -d supercollider ]]; then
    git clone https://github.com/supercollider/supercollider.git
fi
if [[ ! -d sc3-plugins ]]; then
  git clone https://github.com/supercollider/sc3-plugins.git
fi
if [[ ! -f QScintilla_gpl-2.9.2.tar.gz ]]; then
  wget 'https://sourceforge.net/projects/pyqt/files/QScintilla2/QScintilla-2.9.2/QScintilla_gpl-2.9.2.tar.gz'
fi
if [[ ! -f qwt-6.1.2.tar.bz2 ]]; then
  wget 'https://downloads.sourceforge.net/project/qwt/qwt/6.1.2/qwt-6.1.2.tar.bz2'
fi
tar -xf QScintilla_gpl-2.9.2.tar.gz
tar -xf qwt-6.1.2.tar.bz2

#Build supercollider 3.8 from source
cd "$SP_ROOT/supercollider"
git checkout Version-3.9.3
git submodule init && git submodule update
mkdir -p build
cd build
cmake -DSC_EL=no -DCMAKE_PREFIX_PATH="$QT/lib/cmake" ..
make
sudo make install
#This should install to /usr/local/

#Build sc3 plugins and install to /usr/local/ so supercollider can find them
cd "$SP_ROOT/sc3-plugins"
git submodule init && git submodule update
cp -r external_libraries/nova-simd/* source/VBAPUGens
mkdir -p build
cd build
cmake -DSC_PATH="$SP_ROOT/supercollider/" -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_BUILD_TYPE=Release ..
make
sudo make install
rsync -arv SC3plugins "$SP_ROOT/supercollider/build/editors/sc-ide/SuperCollider.app/Contents/Resources/plugins/"


#Build qscintilla libraries for Qt5
cd "$SP_ROOT/QScintilla_gpl-2.9.2/Qt4Qt5/"
"$QT/bin/qmake" qscintilla.pro
make
sudo make install

#Build qwt libraries for Qt5
cd "$SP_ROOT/qwt-6.1.2"
"$QT/bin/qmake" qwt.pro
make
sudo make install
sudo cp /usr/local/qwt-6.1.2/features/* "$QT/mkspecs/features/"

#Build Sonic-Pi server extensions, documentation, and gui
cd "$SP_APP_SRC"
"$SP_SRC/app/server/ruby/bin/compile-extensions.rb"
"$SP_SRC/app/server/ruby/bin/i18n-tool.rb" -t
cp -f ruby_help.tmpl ruby_help.h
"$SP_SRC/app/server/ruby/bin/qt-doc.rb" -o ruby_help.h
"$QT/bin/lrelease" SonicPi.pro 
"$QT/bin/qmake" SonicPi.pro 
make

### FOR FINAL RELEASE ONLY MOVE THIS INTO package-osx-app ###
#"$QT/bin/macdeployqt" 'Sonic Pi.app'

#Soft Link extra stuff that the app will need at runtime
cd "$SP_APP_SRC/Sonic Pi.app"
ln -f -s "$SP_SRC/app/" ./
ln -f -s "$SP_SRC/etc/" ./
ln -f -s "$SP_ROOT/supercollider/build/editors/sc-ide/SuperCollider.app/Contents/Resources/scsynth" "$SP_SRC/app/server/native/osx/scsynth"
ln -f -s "$SP_ROOT/supercollider/build/editors/sc-ide/SuperCollider.app/Contents/Resources/scsynth" "$SP_SRC/app/server/native/scsynth"
mkdir -p "$SP_SRC/app/server/native/ruby/bin"
ln -f -s "$(which ruby)" "$SP_SRC/app/server/native/ruby/bin/ruby"
rsync -arv "$SP_ROOT/QScintilla_gpl-2.9.2/Qt4Qt5/libqscintilla2".* Contents/MacOS/
rsync -arv "$SP_ROOT/qwt-6.1.2/lib/" Contents/MacOS/
install_name_tool -change qwt.framework/Versions/6/qwt @executable_path/qwt.framework/Versions/6/qwt Contents/MacOS/Sonic\ Pi 
install_name_tool -change libqscintilla2.12.dylib @executable_path/libqscintilla2.12.dylib Contents/MacOS/Sonic\ Pi 
#Copy plugins in place
mkdir -p "$SP_SRC/app/server/native/supercollider/plugins"
rsync -arv "$SP_ROOT/supercollider/build/server/plugins/"*.scx "$SP_SRC/app/server/native/supercollider/plugins/"


### FOR FINAL RELEASE ONLY MOVE THIS INTO package-osx-app ###
#rsync -arv "$SP_SRC/app" ./
#rsync -arv "$SP_SRC/etc" ./
#cp -R /Applications/SuperCollider/SuperCollider.app/Contents/Resources/scsynth ./app/server/native/osx/scsynth
